;;;; EMACS CONFIG FILE (for emacs 24) {{{

;;;; PACKAGES ADMINISTRATION {{{

;;; my packages list
(setq my-packages
      '(
        evil
        evil-leader
        monokai-theme
        org
        powerline
        surround
        undo-tree
        ))


;;; set ELPA repos
(setq package-archives '(("ELPA" . "http://tromey.com/elpa/")
                         ("gnu" . "http://elpa.gnu.org/packages/")
                         ("marmalade" . "http://marmalade-repo.org/packages/")
                         ("melpa" . "http://melpa.milkbox.net/packages/")))


;;; initialaze the packages and create the packages list if not exists
(package-initialize)
(when (not package-archive-contents)
  (package-refresh-contents))

;;; install packages if not exists
(dolist (pkg my-packages)
  (when (and (not (package-installed-p pkg))
           (assoc pkg package-archive-contents))
    (package-install pkg)))

;;;; }}}
;;;; VIM-LIKE MODE (Evil) {{{

;;; evil
(require 'evil)
(evil-mode 1)

;;; evil for org-mode
(require 'evil-leader)
(load "~/.emacs.d/evil-org.el")

;;; }}}
;;;; ORG-MODE {{{

;;; org-mode
(require 'org)
(setq org-directory "~/org")
(setq org-default-notes-file (concat org-directory "/notes.org"))

; record date and time when a task is marked as DONE
(setq org-log-done t)

; detect idle time when clock is running
(setq org-clock-idle-time 10)

 (eval-after-load "org"
  '(progn
     ;; Change .pdf association directly within the alist
     (setcdr (assoc "\\.pdf\\'" org-file-apps) "zathura %s")))

;;;;}}}
;;;; AESTHETICS {{{

;;; not welcome-screen
(setq inhibit-startup-screen t)

;;; no message in scratch buffer
(setq initial-scratch-message "")

;;; hide menu bar
(menu-bar-mode -1)

;;; theme
(load-theme 'monokai t)
(set-face-background 'default "nil")

;;; powerline
(require 'powerline)
(powerline-center-theme)

;;;;}}}
;;;; BEHAVIOUR {{{
;;; surround
(require 'surround)
(global-surround-mode 1)

; show matching parenthesis
(show-paren-mode t)

; always show trailing whitespace
(setq-default show-trailing-whitespace t)

; always indent with spaces
(setq-default indent-tabs-mode nil)
(setq-default default-tab-width 4)

; backup files are for sissies
; (setq-default make-backup-files nil)

; replace yes/no questions with y/n
(fset 'yes-or-no-p 'y-or-n-p)

; mondays are the first day of the week (for M-x calendar)
(setq-default calendar-week-start-day 1)

;; keep session between emacs runs (~/.emacs.desktop)
(setq desktop-save 'if-exists)
(desktop-save-mode 1)
(setq desktop-globals-to-save
      (append '((extended-command-history . 50)
                (file-name-history . 200)
                (grep-history . 50)
                (compile-history . 50)
                (minibuffer-history . 100)
                (query-replace-history . 100)
                (read-expression-history . 100)
                (regexp-history . 100)
                (regexp-search-ring . 100)
                (search-ring . 50)
                (shell-command-history . 50)
                tags-file-name
                register-alist)))

(setq-default calendar-week-start-day 1)

; use undo-tree for better undo
(require 'undo-tree)
(global-undo-tree-mode)
;;;;}}}

;;;; }}}

; vim:filetype=lisp:foldmethod=marker
